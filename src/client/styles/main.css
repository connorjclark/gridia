@font-face {
  font-family: 'Jura';
  font-display: block;
  src: url('../fonts/Jura.ttf') format('truetype');
}

@font-face {
  font-family: 'VT323';
  font-display: block;
  src: url('../fonts/VT323.ttf') format('truetype');
}

* {
  user-select: none;
}

:root {
  --color-black: #212227;
  --color-blue: #0053ba;

  --background-color: var(--color-black);
  --window-background-color: rgb(48 50 58 / 86%);;
  --text-color: white;
  --button-color: var(--color-blue);
}

html {
  font-family: 'Jura';
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  width: 100%;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  background-color: var(--background-color);
  color: var(--text-color);
}

body.disconnected {
  opacity: 0.5;
}

button {
  margin: 5px;
}

.start-scene {
  background-size: 32px 32px;
  background-image: linear-gradient(to right, #2c2a2a 1px, transparent 1px), linear-gradient(to bottom, #2c2a2a 1px, transparent 1px);
}
.start-scene__button--connect {
  width: 100%;
}

.start-scene input {
  color: var(--text-color);
  background-color: var(--background-color);
  border: 1px solid white;
}

.hidden {
  display: none !important;
}

.game-title {
  font-family: 'VT323';
  font-size: 300px;
  margin: 0;
  color: #0B0C10;
  text-shadow: -2px -2px 0 rgb(156, 149, 149),-2px -1px 0 white,-2px 0px 0 white,-2px 1px 0 white,-2px 2px 0 white,-1px -2px 0 white,-1px -1px 0 white,-1px 0px 0 white,-1px 1px 0 white,-1px 2px 0 white,0px -2px 0 white,0px -1px 0 white,0px 0px 0 white,0px 1px 0 white,0px 2px 0 white,1px -2px 0 white,1px -1px 0 white,1px 0px 0 white,1px 1px 0 white,1px 2px 0 white,2px -2px 0 white,2px -1px 0 white,2px 0px 0 white,2px 1px 0 white,2px 2px 0 white;
  /* -webkit-text-stroke: 5px white; */
}

.scene {
  height: calc(100vh - 40px);
  overflow: auto;

  display: grid;
  place-items: center center;
}
.scene-controller.hidden ~ .scene {
  height: 100vh;
}

.scene-controller {
  height: 40px;
  border-bottom: solid 1px var(--text-color);
}

#canvases {
  cursor: cell;
}
.game.select-tile-mode #canvases {
  cursor: pointer;
}

.status-texts {
  position: absolute;
  bottom: 0;
  right: 0;
  pointer-events: none;
  color: yellow;
  padding: 5px;
  z-index: 10;
}
.status-texts--creature {
  transform: translateX(-50%);
  text-align: center;
}

.status-text {
  transition: 2s ease-in-out;
  -webkit-text-stroke: medium;
}

.status-text--remove {
  transform: translate(0, -100px);
  opacity: 0;
}

.chat {
  display: flex;
  flex-direction: column;
  height: 100%;
  margin: 0 10px;
  opacity: 0.8;
  pointer-events: all;
}
.chat:hover {
  opacity: 1;
}
.chat textarea {
  flex-grow: 1;
  resize: none;
  background-color: var(--background-color);
  color: var(--text-color);
}
.chat-input {
  background-color: var(--background-color);
  color: var(--text-color);
}
.chat-submit {
  background-color: var(--background-color);
  margin: 0;
}
.chat-sections {
  background-color: var(--background-color);
}
.chat-section {
  padding: 3px;
  flex-grow: 1;
  text-align: center;
}
.chat-section.selected {
  background-color: var(--color-blue);
}

.help pre {
  word-wrap: break-word;
  white-space: pre-wrap;
}
.help a {
  color: silver;
}

.help .sections {
  width: 30%;
}
.help .section {
  border: solid 1px white;
  padding: 5px;
}
.help .section.selected {
  color: gold;
}
.help .current-section {
  width: 70%;
  padding: 5px;
  font-size: 18px;
}

.contextmenu {
  display: none;
  position: absolute;
  background: var(--background-color);
  padding: 5px;
  border: 1px solid var(--text-color);
}

.contextmenu div:hover {
  background: var(--color-blue);
}

.panels-container {
  pointer-events: all;
}

.panels__tabs {
  display: flex;
  margin: 5px 0;
}

.panels__tab {
  margin-right: 3px;
  padding: 0 3px;
  border: black solid 1px;
  background-color: rgb(85, 85, 85);
  color: white;
}

.panels__tab--active {
  color: gold;
}

.select-character--form {
  background-color: gray;
  padding: 20px;
}
.select-character__players {
  overflow: scroll;
  max-height: 30vh;
  /* TODO: remove when "Graphic component" is not position: absolute */
  will-change: transform;
}

.select-character__player {
  display: flex;
  align-items: center;
  padding: 5px;
  margin: 5px;
  border: 1px solid var(--text-color);
}
.select-character__player:hover {
  background-color: var(--color-blue);
}

.create__form {
  padding: 20px;
  width: 100%;
  padding-left: 15vw;
  padding-right: 15vw;
}
.create__attributes {
  display: grid;
  grid-template-rows: repeat(3, 1fr);
  grid-auto-flow: column;
}
.create__skill-category {
  margin: 10px;
}

.create__skill.selected {
  background-color: #137c13;
  color: ghostwhite;
}
.create__skill.specialized {
  background-color: gold;
  color: var(--color-black);
}
.create__skill.required {
  background-color: lightgray;
  color: var(--color-black);
}

.scene-map-select__form,
.scene-map-select__form input {
  margin: 10px;
}

.scene-map-select__preview {
  overflow: scroll;
  width: 400px;
  height: 400px;
}

.generate--select-btn {
  width: 200px;
}

.generate__separator {
  border-bottom: 1px solid black;
}

.scene-map-select__map-list {
  list-style-type: none;
  overflow-y: scroll;
  max-height: 20vh;
}
.scene-map-select__map-list--item {
  padding: 5px;
}
.scene-map-select__map-list--item:hover {
  background-color: var(--color-blue);
}

.pd-5 {
  padding: 5px;
}

.flex {
  display: flex;
}
.flex-grow {
  flex-grow: 1;
}
.flex-column {
  flex-direction: column;
}
.align-items-center {
  align-items: center;
}

.grid {
  display: grid;
}
.grid-contents {
  display: contents;
}

.item-usages-search {
  grid-template-columns: max-content max-content max-content 1fr;
}
.item-usages-search__header > div {
  padding: 5px;
  border-bottom: 1px solid white;
}
.item-usages-search__text {
  grid-column: 1/5;
  text-align: left;
  border-bottom: 1px solid grey;
  padding: 5px;
}

.ui {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  /* TODO: this pointer event shuffling seems wrong... is there a better way? */
  pointer-events: none;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* always show scrollbars */
.ui ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 15px;
}

.ui ::-webkit-scrollbar-thumb {
  /* border-radius: 4px; */
  background-color: rgba(255, 255, 255, .5);
  /* box-shadow: 0 0 1px rgba(0, 0, 0, .5); */
}

/* https://grid.layoutit.com/?id=5sEXk6x */
.ui .grid-container {
  display: grid;
  grid-template-columns: .2fr 1fr 1fr .2fr;
  grid-template-rows: .3fr .5fr 2.5fr .8fr;
  gap: 1px 1px;
  grid-auto-flow: row;
  grid-template-areas:
      "left top top right"
      "left center center right"
      "left center center right"
      "bottom bottom bottom bottom";
  flex-grow: 1;
  height: 0;
  margin: 5px;
}
@media only screen and (max-width: 1000px) {
  .ui .grid-container {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: .3fr .5fr 2.5fr;
  }
  .grid-container .left {
    width: 100%;
  }
}

.grid-container .grid-section {
  min-height: 0;
}
.grid-container .bottom { grid-area: bottom; display: flex; justify-content: space-between; flex-flow: row-reverse; }
.grid-container .center { grid-area: center; }
.grid-container .right { grid-area: right; display: flex; flex-direction: column; }
.grid-container .left { grid-area: left; display: flex; flex-direction: column; }
.grid-container .top { grid-area: top; display: flex; flex-flow: row-reverse; }

.ui .toolbar {
  align-self: end;
}
@media only screen and (max-width: 1000px) {
  .ui .toolbar {
    align-self: unset;
  }
}

.mobile {
  display: none;
}
@media only screen and (max-width: 1000px) {
  .mobile {
    display: unset;
  } 
}

.window {
  max-height: 100%;
  margin: 2px;
  border: solid 1px rgb(186 186 186);
  color: white;
  background-color: var(--window-background-color);
  pointer-events: all;
  overflow-y: auto;
  align-self: end;
  justify-self: end;
}
.window--noscroll {
  overflow-y: unset;
}
.window--fill {
  width: 100%;
  height: 100%;
}
.grid-container .center {
  max-width: 50%;
}

.window--chat {
  flex-grow: 0.25;
  background-color: unset;
  border: none;
}
@media only screen and (max-width: 1000px) {
  .window--chat {
    flex-grow: 1;
  }
}

.tabbed-pane__tabs {
  display: flex;
  margin-bottom: 15px;
  border-bottom: 1px solid #80753c;
  position: sticky;
  top: 0;
  background-color: #323132;
  z-index: 1;
}
.tabbed-pane__tab {
  flex-grow: 1;
  background-color: transparent;
  margin: 0;
  border: none;
  color: white;
  font-size: 16px;
}
.tabbed-pane__tab:focus-visible {
  outline: 1px solid gold;
}
.tabbed-pane__tab.selected {
  color: gold;
}

.skill--learned {
  opacity: 0.5;
}
.skill--specialized {
  color: gold;
}
.skill__level {
  margin: 3px;
  font-size: 22px;
}
.skill__xp-bar {
  border-bottom: 5px solid;
  border-image: linear-gradient(to right, #e6cf54 calc(var(--percent) * 100%), rgb(119, 57, 57) calc(var(--percent) * 100%)); /* to top - at 50% transparent */
  border-image-slice: 1;
}
.skill.selected {
  color: gold;
}

.attributes {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}

.admin__filter {
  margin: 5px;
  white-space: nowrap;
}
.admin__filter--empty {
  opacity: 0.5;
}

.admin__selections {
  display: flex;
  flex-wrap: wrap;
}
.admin__selection {
  flex: 1 0 21%;
  display: flex;
  justify-content: center;
  max-width: 32px;
  padding: 1px;
}
.admin__selection--selected {
  border: 1px solid gold;
  padding: 0;
}

.admin__tool--selected {
  color: gold;
}

.mapview {
  position: relative;
  width: fit-content;
}
.mapview__zoom {
  position: absolute;
  top: 0;
  right: 0;
  visibility: hidden;
  display: flex;
  flex-direction: column;
  margin: 5px;
}
.mapview:hover .mapview__zoom {
  visibility: visible;
}

.mapviewtiles__row {
  display: flex;
}
.mapviewtiles__tile {
  position: relative;
  min-width: 16px;
  height: 16px;
}

.partition-list {
  overflow: scroll;
  max-height: 250px;
}
.partition {
  padding: 5px;
  border-bottom: 1px solid white;
}
.partition--selected {
  background-color: #00724c;
}
.partition__name {
  font-size: larger;
}

.window--view {
  order: 2;
  width: 100%;
}

.window--map {
  font-family: monospace;
  width: fit-content;
  align-self: end;
}

.window--container {
  order: 1;
  max-height: 30vh;
}
.container__slots {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 1px;
  background-color: antiquewhite;
  border: 1px solid antiquewhite;
}
.container__slot {
  width: 32px;
  height: 32px;
  background-color: #604f4f;
}
.container__slot:hover {
  background-color: #cccca9;
}
.container__slot--selected {
  background-color: gold;
}

.window--equipment .container__slots {
  display: grid;
  grid-template: 'p a . g'
                 'b c d i'
                 'f e . h';
  grid-auto-columns: min-content;
  background: none;
  border: none;
}
.window--equipment .container__slot:nth-child(1) {
  grid-area: p;
}
.window--equipment .container__slot:nth-child(2) {
  grid-area: a;
}
.window--equipment .container__slot:nth-child(3) {
  grid-area: b;
}
.window--equipment .container__slot:nth-child(4) {
  grid-area: c;
}
.window--equipment .container__slot:nth-child(5) {
  grid-area: d;
}
.window--equipment .container__slot:nth-child(6) {
  grid-area: e;
}
.window--equipment .container__slot:nth-child(7) {
  grid-area: f;
}
.window--equipment .container__slot:nth-child(8) {
  grid-area: g;
}
.window--equipment .container__slot:nth-child(9) {
  grid-area: h;
}
.window--equipment .container__slot:nth-child(10) {
  grid-area: i;
}
.window--equipment .container__slot {
  margin: 5px;
  border: 1px solid antiquewhite;
}
/* lol */
.window--equipment .custom-creature-graphic {
  margin-right: 0 !important;
  margin: 5px;
}

.dialogue__text {
  margin: 20px;
  min-height: 100px;
  word-break: break-word;
  text-align: start;
}
.dialouge__text--speaker-1 {
  text-align: end;
}
.active-speaker {
  border-bottom: 3px solid gold;
}

.window--attributes {
  flex-grow: 1;
  max-width: 20vw;
  align-self: end;
  background-color: unset;
  border: unset;
}

.bar {
  position: relative;
  border: 3px solid var(--color-black);
  background-color: darkslategrey;
}
.bar__bg {
  transition: width 150ms;
}
.bar__label {
  position: absolute;
  width: 100%;
  color: black;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  padding-left: 5px;
  padding-right: 5px;
}

.buff {
  display: inline-block;
}

.spell {
  position: relative;
  margin: 5px;
}
.spell:hover {
  outline: 1px dotted gold;
  cursor: pointer;
}
.timer {
  position: absolute;
  top: 0;
  left: 0;
}

.tooltip {
  display: none;
  position: relative;
  background-color: var(--background-color);
  border: 1px solid var(--text-color);
  z-index: 10;
  padding: 5px;
  transform: translateY(-200%);
}
.tooltip-on-hover:hover + .tooltip {
  display: block;
  position: absolute;
}

.usages__usages {
  display: flex;
  flex-wrap: wrap;
  max-width: 320px;
}

.possible-usages__usage {
  display: flex;
  align-items: center;
  border-top: 1px solid #cf8989;
}
.possible-usages__usage__tool {
  margin-right: 5px;
}
.possible-usages__usage__focus {
  padding-right: 5px;
  margin-right: 5px;
  border-right: 1px solid #cf8989;
}
.possible-usages__usage__products {
  display: flex;
}

.moving-item {
  position: absolute;
}

/* https://stackoverflow.com/questions/14387690/how-can-i-show-only-corner-borders */
@property --delta {
  syntax: '<length>';
  initial-value: 0;
  inherits: false;
}

/* https://stackoverflow.com/questions/14387690/how-can-i-show-only-corner-borders */
@keyframes gridCursor {
  100% { --delta: 3px }
}

.grid-cursor {
  --size: 64px;
  --x: 0px;
  --y: 0px;
  --delta: 0px;
  --thickness: 2px;
  --width: 10px;
  --color: gold;

  top: calc(var(--y) - var(--delta) - var(--thickness));
  left: calc(var(--x) - var(--delta) - var(--thickness));
  width: calc(var(--size) + var(--delta) * 2 + var(--thickness));
  height: calc(var(--size) + var(--delta) * 2 + var(--thickness));

  position: absolute;
  animation: 0.75s linear gridCursor infinite alternate;
  border: var(--thickness) solid transparent;
  background: linear-gradient(var(--color), var(--color)) top left, linear-gradient(var(--color), var(--color)) top left, linear-gradient(var(--color), var(--color)) bottom left, linear-gradient(var(--color), var(--color)) bottom left, linear-gradient(var(--color), var(--color)) top right, linear-gradient(var(--color), var(--color)) top right, linear-gradient(var(--color), var(--color)) bottom right, linear-gradient(var(--color), var(--color)) bottom right;
  background-size: var(--thickness) var(--width), var(--width) var(--thickness);
  background-origin: border-box;
  background-repeat: no-repeat;
  box-sizing: content-box;
  pointer-events: none;
}

.dpad {
  position: absolute;
  right: 0;
  bottom: 0;
  margin: 0.5in 0.75in;
  pointer-events: all;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}

.dpad__button {
  padding: 4px;
  color: white;
  background-color: black;
  font-weight: bold;
}

.bindings {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-content: center;
}
.binding__span {
  padding: 5px;
  background-color: #505043;
}
.binding--selected .binding__span {
  background-color: #777727;
}

@property --inset-top {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}
@property --inset-right {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}
@property --inset-bottom {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}
@property --inset-left {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}
@keyframes notification-animation {
  0% {
    --inset-top: 0%;
    --inset-right: 50%;
    --inset-bottom: 55%;
    --inset-left: 50%;
  }
  25% {
    --inset-top: 0%;
    --inset-right: 0%;
    --inset-bottom: 55%;
    --inset-left: 0%;
  }
  100% {
    --inset-top: 0%;
    --inset-right: 0%;
    --inset-bottom: 0%;
    --inset-left: 0%;
  }
}
.notification-wrapper {
  animation: notification-animation 1s ease 2 alternate;
  position: absolute;
  top: 20%;
  left: 50%;
  right: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
  width: fit-content;
  height: fit-content;
  --inset-top: 0%;
  --inset-right: 0%;
  --inset-bottom: 0%;
  --inset-left: 0%;
  clip-path: inset(var(--inset-top) var(--inset-right) var(--inset-bottom) var(--inset-left));
}
.notification {
  display: flex;
  flex-direction: column;
  background-color: #315263;
  padding: 3px;
  color: white;
  border: solid 3px #315263;
  border-radius: 4px;
}
.notification__section {
  background-color: #3C6478;
  margin: 3px 6px;
}
.notification__section--title {
  font-size: larger;
  font-weight: bold;
  text-align: center;
}
.notification__section--content {
  padding: 10px;
}

.relative-time {
  font-family: monospace;
}

.store-items {
  display: flex;
  flex-direction: column;
  gap: 3px;

  --background-color: #5f645c;
  --selected-color: var(--color-blue);
}
.store-item {
  display: flex;
  border: 2px solid var(--background-color);
  border-radius: 2px;
}
.store-item--selected, .store-item:hover {
  background-color: var(--selected-color);
}
.store-item__gfx {
  background-color: var(--background-color);
}
.store-item__gfx .graphic {
  background-color: var(--window-background-color);
  border: inset 2px var(--background-color);
}
.store-item__label {
  padding: 0 3px;
}
span.store-item__quantity {
  opacity: 0.7;
}
.store-item__price {
  width: 30%;
  align-self: end;
  text-align: end;
  margin-left: auto;
}
.store-item__price__leftborder {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 0 1rem 1rem;
  border-color: transparent transparent var(--background-color) transparent;
}
.store-item__price__inner {
  padding: 2px;
  height: 1rem;
  width: 100%;
  background-color: var(--background-color);
}